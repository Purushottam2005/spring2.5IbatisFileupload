<?xml version="1.0" encoding="UTF-8"?>
<!-- xmlns="http://www.springframework.org/schema/mvc" -->
<!-- 	xmlns:task="http://www.springframework.org/schema/task" -->
<beans:beans 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
<!-- 	<annotation-driven conversion-service="conversionService"> -->
<!-- 		<argument-resolvers> -->
<!-- 			<beans:bean class="org.springframework.samples.mvc.data.custom.CustomArgumentResolver"/> -->
<!-- 		</argument-resolvers> -->
<!-- 		<async-support default-timeout="3000"> -->
<!-- 			<callable-interceptors> -->
<!-- 				<beans:bean class="org.springframework.samples.mvc.async.TimeoutCallableProcessingInterceptor" /> -->
<!-- 			</callable-interceptors> -->
<!-- 		</async-support> -->
<!-- 	</annotation-driven> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
<!-- 	<resources mapping="/resources/**" location="/resources/" /> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Only needed because we install custom converters to support the examples in the org.springframewok.samples.mvc.convert package -->
<!-- 	<beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"> -->
<!-- 		<beans:property name="formatters"> -->
<!--             <beans:bean class="org.springframework.samples.mvc.convert.MaskFormatAnnotationFormatterFactory" /> -->
<!-- 		</beans:property> -->
<!-- 	</beans:bean> -->
	<beans:bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<beans:property name="alwaysUseFullPath" value="true" />
	</beans:bean>
	<!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload package -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="5000000" />
	</beans:bean>

    <beans:bean id="respository" class="com.lp.repository.FileRepository">
<!--         <beans:constructor-arg value="${repository.path}" /> -->
        <beans:constructor-arg value="C:/tools/workspace-sts-3.2.0.RELEASE/d3/WebContent/upload-folder" />
    </beans:bean>
	<beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="java:/comp/env/jdbc/ssLifeDataSource" />
    </beans:bean>


	<!-- Imports user-defined @Controller beans that process client requests -->
	<beans:import resource="controllers.xml" />

<!-- 	<task:annotation-driven /> -->
	
</beans:beans>